{"version":3,"sources":["components/Widgets/Statistic/Notification.js","views/maps/google-maps/InfoBox.js","views/maps/google-maps/MarkerClusterer.js","views/maps/google-maps/Marker.js","views/maps/google-maps/StreetViewPanorma.js","views/maps/GoogleMaps.js"],"names":["Notification","props","_jsx","React","Fragment","children","_jsxs","Alert","variant","message","Link","href","link","target","className","StyledMapWithAnInfoBox","compose","withProps","googleMapURL","loadingElement","style","height","containerElement","mapElement","center","lat","lng","withStateHandlers","isOpen","onToggleOpen","_ref","withScriptjs","withGoogleMap","GoogleMap","defaultZoom","defaultCenter","defaultOptions","styles","fancyMapStyles","InfoBox","defaultPosition","google","maps","LatLng","options","closeBoxURL","enableEventPropagation","backgroundColor","opacity","padding","fontSize","fontColor","Marker","position","onClick","onCloseClick","MarkerClusterer","require","MapWithAMarkerClusterer","withHandlers","onMarkerClustererClick","markerClusterer","clickedMarkers","getMarkers","console","log","concat","length","averageCenter","enableRetinaIcons","gridSize","markers","map","marker","latitude","longitude","photo_id","MapWithAMarker","_require","_require2","StreetViewPanorama","OverlayView","getPixelPositionOffset","width","x","y","StreetViewPanormaWithAnOverlayView","visible","mapPaneName","OVERLAY_LAYER","background","color","borderRadius","GoogleMaps","_useState","useState","_useState2","_slicedToArray","setMarkers","useEffect","url","join","fetch","then","res","json","data","photos","Row","Col","sm","ModuleNotification","xl","Card","Header","Title","as","Body","StreetViewPanorma"],"mappings":"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","file":"static/js/23.ecfca5f5.chunk.js","sourcesContent":["import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Notification = (props) => {\n  return (\n    <React.Fragment>\n      <Alert variant=\"warning\">\n        {props.message}\n        <Alert.Link href={props.link} target=\"_blank\" className=\"float-right\">\n          Demo & Documentation\n        </Alert.Link>\n      </Alert>\n    </React.Fragment>\n  );\n};\n\nexport default Notification;\n","/*global google*/\n\nimport InfoBox from 'react-google-maps/lib/components/addons/InfoBox';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport { compose, withProps, withStateHandlers } from 'recompose';\nimport fancyMapStyles from './fancy-map-styles.json';\n\nconst StyledMapWithAnInfoBox = compose(\n  withProps({\n    googleMapURL:\n      'https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places',\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />,\n    center: { lat: 28.5274851, lng: 77.1389452 }\n  }),\n  withStateHandlers(\n    () => ({\n      isOpen: false\n    }),\n    {\n      onToggleOpen:\n        ({ isOpen }) =>\n        () => ({\n          isOpen: !isOpen\n        })\n    }\n  ),\n  withScriptjs,\n  withGoogleMap\n)((props) => (\n  <GoogleMap defaultZoom={5} defaultCenter={props.center} defaultOptions={{ styles: fancyMapStyles }}>\n    <InfoBox\n      defaultPosition={new google.maps.LatLng(props.center.lat, props.center.lng)}\n      options={{ closeBoxURL: ``, enableEventPropagation: true }}\n    >\n      <div style={{ backgroundColor: `yellow`, opacity: 0.75, padding: `12px` }}>\n        <div style={{ fontSize: `16px`, fontColor: `#08233B` }}>Hello, India!</div>\n      </div>\n    </InfoBox>\n    <Marker position={{ lat: 23.0204978, lng: 72.4396583 }} onClick={props.onToggleOpen}>\n      {props.isOpen && (\n        <InfoBox onCloseClick={props.onToggleOpen} options={{ closeBoxURL: ``, enableEventPropagation: true }}>\n          <div style={{ backgroundColor: `yellow`, opacity: 0.75, padding: `12px` }}>\n            <div style={{ fontSize: `16px`, fontColor: `#08233B` }}>Hello, Gujarat!</div>\n          </div>\n        </InfoBox>\n      )}\n    </Marker>\n  </GoogleMap>\n));\n\nexport default StyledMapWithAnInfoBox;\n","import { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport { compose, withProps, withHandlers } from 'recompose';\n\nconst { MarkerClusterer } = require('react-google-maps/lib/components/addons/MarkerClusterer');\n\nconst MapWithAMarkerClusterer = compose(\n  withProps({\n    googleMapURL:\n      'https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places',\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />\n  }),\n  withHandlers({\n    onMarkerClustererClick: () => (markerClusterer) => {\n      const clickedMarkers = markerClusterer.getMarkers();\n      console.log(`Current clicked markers length: ${clickedMarkers.length}`);\n      console.log(clickedMarkers);\n    }\n  }),\n  withScriptjs,\n  withGoogleMap\n)((props) => (\n  <GoogleMap defaultZoom={3} defaultCenter={{ lat: 25.0391667, lng: 121.525 }}>\n    <MarkerClusterer onClick={props.onMarkerClustererClick} averageCenter enableRetinaIcons gridSize={60}>\n      {props.markers.map((marker) => (\n        <Marker key={marker.photo_id} position={{ lat: marker.latitude, lng: marker.longitude }} />\n      ))}\n    </MarkerClusterer>\n  </GoogleMap>\n));\n\nexport default MapWithAMarkerClusterer;\n","import { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport { compose } from 'recompose';\n\nconst MapWithAMarker = compose(\n  withScriptjs,\n  withGoogleMap\n)((props) => (\n  <GoogleMap defaultZoom={8} defaultCenter={{ lat: 28.5274851, lng: 77.1389452 }}>\n    <Marker position={{ lat: 28.5274851, lng: 77.1389452 }} />\n  </GoogleMap>\n));\n\nexport default MapWithAMarker;\n","const { compose, withProps } = require('recompose');\n\nconst { withScriptjs, withGoogleMap, GoogleMap, StreetViewPanorama, OverlayView } = require('react-google-maps');\n\nconst getPixelPositionOffset = (width, height) => ({\n  x: -(width / 2),\n  y: -(height / 2)\n});\n\nconst StreetViewPanormaWithAnOverlayView = compose(\n  withProps({\n    googleMapURL:\n      'https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places',\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />,\n    center: { lat: 49.2853171, lng: -123.1119202 }\n  }),\n  withScriptjs,\n  withGoogleMap\n)((props) => (\n  <GoogleMap defaultZoom={8} defaultCenter={props.center}>\n    <StreetViewPanorama defaultPosition={props.center} visible>\n      <OverlayView\n        position={{ lat: 49.28590291211115, lng: -123.11248166065218 }}\n        mapPaneName={OverlayView.OVERLAY_LAYER}\n        getPixelPositionOffset={getPixelPositionOffset}\n      >\n        <div style={{ background: `red`, color: `white`, padding: 5, borderRadius: `50%` }}>OverlayView</div>\n      </OverlayView>\n    </StreetViewPanorama>\n  </GoogleMap>\n));\n\nexport default StreetViewPanormaWithAnOverlayView;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport InfoBox from './google-maps/InfoBox';\nimport MarkerClusterer from './google-maps/MarkerClusterer';\nimport Marker from './google-maps/Marker';\nimport StreetViewPanorma from './google-maps/StreetViewPanorma';\nimport ModuleNotification from '../../components/Widgets/Statistic/Notification';\n\nimport fetch from 'isomorphic-fetch';\n\nconst GoogleMaps = () => {\n  const [markers, setMarkers] = useState([]);\n\n  useEffect(() => {\n    const url = [\n      // Length issue\n      `https://gist.githubusercontent.com`,\n      `/farrrr/dfda7dd7fccfec5474d3`,\n      `/raw/758852bbc1979f6c4522ab4e92d1c92cba8fb0dc/data.json`\n    ].join('');\n\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        setMarkers(data.photos);\n      });\n\n    return () => {\n      setMarkers([]);\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Col sm={12}>\n          <ModuleNotification\n            message=\"For more info please check the components's official documentation\"\n            link=\"https://www.npmjs.com/package/react-google-maps\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col xl={6}>\n          <Card>\n            <Card.Header>\n              <Card.Title as=\"h5\">Default Marker</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Marker\n                googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places\"\n                loadingElement={<div style={{ height: `100%` }} />}\n                containerElement={<div style={{ height: `400px` }} />}\n                mapElement={<div style={{ height: `100%` }} />}\n              />\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl={6}>\n          <Card>\n            <Card.Header>\n              <Card.Title as=\"h5\">Infobox</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <InfoBox />\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl={6}>\n          <Card>\n            <Card.Header>\n              <Card.Title as=\"h5\">Marker Clusterer</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <MarkerClusterer markers={markers} />\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl={6}>\n          <Card>\n            <Card.Header>\n              <Card.Title as=\"h5\">Street View Panorma</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <StreetViewPanorma />\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default GoogleMaps;\n"],"sourceRoot":""}