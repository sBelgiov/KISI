{"version":3,"sources":["components/Widgets/Statistic/Notification.js","components/Card/MainCard.js","views/ui-elements/basic/BasicButton.js"],"names":["Notification","props","_jsx","React","Fragment","children","_jsxs","Alert","variant","message","Link","href","link","target","className","MainCard","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","isOption","title","cardClass","optionClass","_useState","useState","_useState2","_slicedToArray","fullCard","setFullCard","_useState3","_useState4","collapseCard","setCollapseCard","_useState5","_useState6","loadCard","setloadCard","_useState7","_useState8","cardRemove","setCardRemove","windowSize","useWindowSize","mainCardClass","Dropdown","alignRight","Toggle","id","Menu","as","Item","onClick","to","setInterval","Card","Header","Title","concat","_toConsumableArray","position","top","left","right","width","height","join","style","Collapse","in","Body","BasicButton","buttonVariants","buttonOptions","icon","basicButtons","map","idx","OverlayTrigger","overlay","Tooltip","Button","outlineButtons","squareButtons","basicDropdownButton","button","DropdownButton","eventKey","splitDropdownButton","SplitButton","Divider","Row","Col","sm","ModuleNotification","ButtonToolbar"],"mappings":"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","file":"static/js/22.bdc4f67c.chunk.js","sourcesContent":["import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Notification = (props) => {\n  return (\n    <React.Fragment>\n      <Alert variant=\"warning\">\n        {props.message}\n        <Alert.Link href={props.link} target=\"_blank\" className=\"float-right\">\n          Demo & Documentation\n        </Alert.Link>\n      </Alert>\n    </React.Fragment>\n  );\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\nimport { Dropdown, Card, Collapse } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport useWindowSize from '../../hooks/useWindowSize';\n\nconst MainCard = (props) => {\n  const { isOption, title, children, cardClass, optionClass } = props;\n\n  const [fullCard, setFullCard] = useState(false);\n  const [collapseCard, setCollapseCard] = useState(false);\n  const [loadCard, setloadCard] = useState(false);\n  const [cardRemove, setCardRemove] = useState(false);\n\n  const windowSize = useWindowSize();\n\n  const cardReloadHandler = () => {\n    setloadCard(true);\n    setInterval(() => {\n      setloadCard(false);\n    }, 3000);\n  };\n\n  const cardRemoveHandler = () => {\n    setCardRemove(true);\n  };\n\n  let fullScreenStyle, loader, cardHeaderRight, cardHeader;\n  let card = '';\n  let mainCardClass = [];\n\n  if (isOption) {\n    cardHeaderRight = (\n      <div className={'card-header-right ' + optionClass}>\n        <Dropdown alignRight={true} className=\"btn-group card-option\">\n          <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\n            <i className=\"feather icon-more-horizontal\" />\n          </Dropdown.Toggle>\n          <Dropdown.Menu as=\"ul\" className=\"list-unstyled card-option\">\n            <Dropdown.Item as=\"li\" className=\"dropdown-item\" onClick={() => setFullCard(!fullCard)}>\n              <i className={fullCard ? 'feather icon-minimize' : 'feather icon-maximize'} />\n              <Link to=\"#\"> {fullCard ? 'Restore' : 'Maximize'} </Link>\n            </Dropdown.Item>\n            <Dropdown.Item as=\"li\" className=\"dropdown-item\" onClick={() => setCollapseCard(!collapseCard)}>\n              <i className={collapseCard ? 'feather icon-plus' : 'feather icon-minus'} />\n              <Link to=\"#\"> {collapseCard ? 'Expand' : 'Collapse'} </Link>\n            </Dropdown.Item>\n            <Dropdown.Item as=\"li\" className=\"dropdown-item\" onClick={cardReloadHandler}>\n              <i className=\"feather icon-refresh-cw\" />\n              <Link to=\"#\"> Reload </Link>\n            </Dropdown.Item>\n            <Dropdown.Item as=\"li\" className=\"dropdown-item\" onClick={cardRemoveHandler}>\n              <i className=\"feather icon-trash\" />\n              <Link to=\"#\"> Remove </Link>\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    );\n  }\n\n  cardHeader = (\n    <Card.Header>\n      <Card.Title as=\"h5\">{title}</Card.Title>\n      {cardHeaderRight}\n    </Card.Header>\n  );\n\n  if (fullCard) {\n    mainCardClass = [...mainCardClass, 'full-card'];\n    fullScreenStyle = { position: 'fixed', top: 0, left: 0, right: 0, width: windowSize.width, height: windowSize.height };\n  }\n\n  if (loadCard) {\n    mainCardClass = [...mainCardClass, 'card-load'];\n    loader = (\n      <div className=\"card-loader\">\n        <i className=\"pct-loader1 anim-rotate\" />\n      </div>\n    );\n  }\n\n  if (cardRemove) {\n    mainCardClass = [...mainCardClass, 'd-none'];\n  }\n\n  if (cardClass) {\n    mainCardClass = [...mainCardClass, cardClass];\n  }\n\n  card = (\n    <Card className={mainCardClass.join(' ')} style={fullScreenStyle}>\n      {cardHeader}\n      <Collapse in={!collapseCard}>\n        <div>\n          <Card.Body>{children}</Card.Body>\n        </div>\n      </Collapse>\n      {loader}\n    </Card>\n  );\n\n  return <React.Fragment>{card}</React.Fragment>;\n};\n\nexport default MainCard;\n","import React from 'react';\nimport {\n  Row,\n  Col,\n  Button,\n  OverlayTrigger,\n  Tooltip,\n  ButtonToolbar,\n  Dropdown,\n  DropdownButton,\n  SplitButton\n} from 'react-bootstrap';\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\n\nimport Card from '../../../components/Card/MainCard';\n\nconst BasicButton = () => {\n  const buttonVariants = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n\n  const buttonOptions = [\n    { variant: 'primary', icon: 'feather icon-thumbs-up mx-1' },\n    { variant: 'secondary', icon: 'feather icon-camera mx-1' },\n    { variant: 'success', icon: 'feather icon-check-circle mx-1' },\n    { variant: 'danger', icon: 'feather icon-slash mx-1' },\n    { variant: 'warning', icon: 'feather icon-alert-triangle mx-1' },\n    { variant: 'info', icon: 'feather icon-info mx-1' }\n  ];\n\n  const basicButtons = buttonVariants.map((variant, idx) => (\n    <OverlayTrigger key={idx} overlay={<Tooltip>{variant}</Tooltip>}>\n      <Button variant={variant} className=\"text-capitalize\">\n        {variant}\n      </Button>\n    </OverlayTrigger>\n  ));\n\n  const outlineButtons = buttonVariants.map((variant, idx) => (\n    <OverlayTrigger key={idx} overlay={<Tooltip>{'outline-' + variant}</Tooltip>}>\n      <Button variant={'outline-' + variant} className=\"text-capitalize\">\n        {variant}\n      </Button>\n    </OverlayTrigger>\n  ));\n\n  const squareButtons = buttonVariants.map((variant, idx) => (\n    <Button key={idx} className=\"btn-square text-capitalize\" variant={variant}>\n      {variant}\n    </Button>\n  ));\n\n\n  const basicDropdownButton = buttonOptions.map((button) => {\n    const title = button.variant;\n    return (\n      <DropdownButton\n        className=\"text-capitalize\"\n        title={title}\n        variant={button.variant}\n        id={`dropdown-variants-${button.variant}`}\n        key={button.variant}\n      >\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\n      </DropdownButton>\n    );\n  });\n\n  const splitDropdownButton = buttonOptions.map((button) => {\n    const title = button.variant;\n    return (\n      <SplitButton\n        title={title}\n        variant={button.variant}\n        id={`dropdown-split-variants-${button.variant}`}\n        key={button.variant}\n        className=\"mr-2 mb-2 text-capitalize\"\n      >\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n      </SplitButton>\n    );\n  });\n\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Col sm={12}>\n          <ModuleNotification\n            message=\"For more info please check the components's official documentation\"\n            link=\"https://react-bootstrap.github.io/components/buttons/\"\n          />\n        </Col>\n      </Row>\n      <Row className=\"btn-page\">\n        <Col>\n          <Card title=\"Default\">\n            {basicButtons}\n            <OverlayTrigger overlay={<Tooltip>link</Tooltip>}>\n              <Button variant=\"link\">Link</Button>\n            </OverlayTrigger>\n          </Card>\n          <Card title=\"Outline\">{outlineButtons}</Card>\n          <Card title=\"Square Button\">{squareButtons}</Card>\n        </Col>\n      </Row>\n      <Row className=\"btn-page\">\n        <Col>\n          <Card title=\"Basic Dropdown Button\">\n            <ButtonToolbar>{basicDropdownButton}</ButtonToolbar>\n          </Card>\n          <Card title=\"Split Dropdown Button\">\n            <ButtonToolbar>{splitDropdownButton}</ButtonToolbar>\n          </Card>\n        </Col>\n      </Row>\n      \n    </React.Fragment>\n  );\n};\n\nexport default BasicButton;\n"],"sourceRoot":""}