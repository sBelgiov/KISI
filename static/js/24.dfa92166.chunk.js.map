{"version":3,"sources":["components/Card/MainCard.js","views/extra/SamplePage.js"],"names":["MainCard","props","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","isOption","title","children","cardClass","optionClass","_useState","useState","_useState2","_slicedToArray","fullCard","setFullCard","_useState3","_useState4","collapseCard","setCollapseCard","_useState5","_useState6","loadCard","setloadCard","_useState7","_useState8","cardRemove","setCardRemove","windowSize","useWindowSize","mainCardClass","_jsx","className","_jsxs","Dropdown","alignRight","Toggle","id","Menu","as","Item","onClick","Link","to","setInterval","Card","Header","Title","concat","_toConsumableArray","position","top","left","right","width","height","join","style","Collapse","in","Body","React","Fragment","SamplePage","Row","Col"],"mappings":"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","file":"static/js/24.dfa92166.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Dropdown, Card, Collapse } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport useWindowSize from '../../hooks/useWindowSize';\n\nconst MainCard = (props) => {\n  const { isOption, title, children, cardClass, optionClass } = props;\n\n  const [fullCard, setFullCard] = useState(false);\n  const [collapseCard, setCollapseCard] = useState(false);\n  const [loadCard, setloadCard] = useState(false);\n  const [cardRemove, setCardRemove] = useState(false);\n\n  const windowSize = useWindowSize();\n\n  const cardReloadHandler = () => {\n    setloadCard(true);\n    setInterval(() => {\n      setloadCard(false);\n    }, 3000);\n  };\n\n  const cardRemoveHandler = () => {\n    setCardRemove(true);\n  };\n\n  let fullScreenStyle, loader, cardHeaderRight, cardHeader;\n  let card = '';\n  let mainCardClass = [];\n\n  if (isOption) {\n    cardHeaderRight = (\n      <div className={'card-header-right ' + optionClass}>\n        <Dropdown alignRight={true} className=\"btn-group card-option\">\n          <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\n            <i className=\"feather icon-more-horizontal\" />\n          </Dropdown.Toggle>\n          <Dropdown.Menu as=\"ul\" className=\"list-unstyled card-option\">\n            <Dropdown.Item as=\"li\" className=\"dropdown-item\" onClick={() => setFullCard(!fullCard)}>\n              <i className={fullCard ? 'feather icon-minimize' : 'feather icon-maximize'} />\n              <Link to=\"#\"> {fullCard ? 'Restore' : 'Maximize'} </Link>\n            </Dropdown.Item>\n            <Dropdown.Item as=\"li\" className=\"dropdown-item\" onClick={() => setCollapseCard(!collapseCard)}>\n              <i className={collapseCard ? 'feather icon-plus' : 'feather icon-minus'} />\n              <Link to=\"#\"> {collapseCard ? 'Expand' : 'Collapse'} </Link>\n            </Dropdown.Item>\n            <Dropdown.Item as=\"li\" className=\"dropdown-item\" onClick={cardReloadHandler}>\n              <i className=\"feather icon-refresh-cw\" />\n              <Link to=\"#\"> Reload </Link>\n            </Dropdown.Item>\n            <Dropdown.Item as=\"li\" className=\"dropdown-item\" onClick={cardRemoveHandler}>\n              <i className=\"feather icon-trash\" />\n              <Link to=\"#\"> Remove </Link>\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    );\n  }\n\n  cardHeader = (\n    <Card.Header>\n      <Card.Title as=\"h5\">{title}</Card.Title>\n      {cardHeaderRight}\n    </Card.Header>\n  );\n\n  if (fullCard) {\n    mainCardClass = [...mainCardClass, 'full-card'];\n    fullScreenStyle = { position: 'fixed', top: 0, left: 0, right: 0, width: windowSize.width, height: windowSize.height };\n  }\n\n  if (loadCard) {\n    mainCardClass = [...mainCardClass, 'card-load'];\n    loader = (\n      <div className=\"card-loader\">\n        <i className=\"pct-loader1 anim-rotate\" />\n      </div>\n    );\n  }\n\n  if (cardRemove) {\n    mainCardClass = [...mainCardClass, 'd-none'];\n  }\n\n  if (cardClass) {\n    mainCardClass = [...mainCardClass, cardClass];\n  }\n\n  card = (\n    <Card className={mainCardClass.join(' ')} style={fullScreenStyle}>\n      {cardHeader}\n      <Collapse in={!collapseCard}>\n        <div>\n          <Card.Body>{children}</Card.Body>\n        </div>\n      </Collapse>\n      {loader}\n    </Card>\n  );\n\n  return <React.Fragment>{card}</React.Fragment>;\n};\n\nexport default MainCard;\n","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport Card from '../../components/Card/MainCard';\n\nconst SamplePage = () => {\n  return (\n    <React.Fragment>\n      <Row>\n        <Col>\n          <Card title=\"Hello Card\" isOption>\n            <p>\n              \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n              Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure\n              dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non\n              proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n            </p>\n          </Card>\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default SamplePage;\n"],"sourceRoot":""}